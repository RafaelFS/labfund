;prog4.mvn
; Programa que, dada uma sequencia de 5 dados, verifica se ela está escrita em ordem crescente
0000 0100 ; Ponto de entrada: pulo para as instruções
; Variáveis do programa
0002 0000 ; Resultado do programa
;
; Lista de dados
0004 0001
0006 0002
0008 0003
000A 0004
000C 0005
;
; Preparação para o loop de verificação
0100 8F00 ; Obtenho o endereço do primeiro dado
0102 4F02 ; Compõe o endereço com o código de operação LOAD	
0104 9106 ; Guarda instrução montada para ser executada
0106 0000 ; Executo a operação de load e obtenho o valor do primeiro dado 
0108 903E ; Coloca o primeiro dado na posição Y da sub-rotina
; Termino a preparação carregando o próximo endereço
010A 8F00 ; Obtenho o endereço do primeiro dado
010C 4348 ; Soma o endereço com a constante 0002 (desloca uma posição)
010E 9F00 ; Altera o conteúdo de 0F00 com o novo endereço
; Início do loop de verificação
0110 4F02 ; Compõe o endereço com o código de operação LOAD
0112 9114 ; Guarda instrução montada para ser executada
0114 0000 ; Executa a instrução recém-montada
0116 903C ; Coloca o dado atual na posição X da sub-rotina
;Chamada de MAIOR
0118 A040 ; Chama a sub-rotina MAIOR
011A 803A ; Copia o resultado de MAIOR para o acumulador
011C 9002 ; Copia o resultado de MAIOR, presente no acumulador, para o resultado do programa
;Verificação de MAIOR
011E 1132 ; Se o resultado de MAIOR for 0, a lista não está ordenada e pula para o final
; Se estou aqui, MAIOR foi 1. Verifico se acabou
0120 8F00 ;  Copia o endereço do último dado lido para o acumulador
0122 5F04 ; Subtrai com o endereço de parada
0124 1132 ; Se zero, condição de parada, salta para o fim
; Se não for zero, na subrotina copio X para Y 
0126 803C ; Obtém o X de MAIOR  
0128 903E ; Coloca o valor de X na posição Y
; Obtenho o novo endereço
012A 8F00 ; Copia o endereço do último dado lido para o acumulador
012C 4348 ; Soma o endereço com a constante 0002 (desloca uma posição)
012E 9F00 ; Altera o conteúdo de 0F00 com o novo endereço
0130 0110 ; Pula para o início do loop de verificação
0132 C114 ; Termina o programa
;
0348 0002 ; Constante 0002 (ADDR+1)
;
0F00 0004 ; Endereço (inicialmente 0004) de onde se deseja ler o dado
0F02 8000 ; Código de operação LOAD, com operando 000
0F04 000C ; Endereço de parada (000C)
;
; Sub-rotina MAIOR
; Verifica se X>Y, guardando 1 em RESULTADO se a afirmação é verdadeira 
; e 0 se a afirmação é falsa. 
;
; Parâmetros formais
003A 0000 ; RESULTADO
003C 0000 ; X
003E 0000 ; Y 
; Corpo da sub-rotina
0040 0000 ; Endereço de retorno
0042 3001 ; Carrego ACUMULADOR com 1 (Verdadeiro)
0044 903A ; Carrego RESULTADO com o valor 1 do ACUMULADOR
0046 803C ; Carrega o conteúdo de X
0048 503E ; Subtrai Y, resultado no ACUMULADOR
004A 204E ; Se ACUMULADOR é negativo, pulo a próxima instrução 
004C 0052 ; Retorna para o endereço contido em 0x040
004E 3000 ; Se está aqui, é porque é menor e coloco o ACUMULADOR em 0
0050 903A ; Se está aqui, é porque é menor e copio o valor 0 do ACUMULADOR para o RESULTADO 
0052 B040 ; Retorna para o endereço contido em 0x040