; Subrotina DUMPER
; Grava em arquivo toda a imagem binária da memória
				;				&       /0000
;Exportando DUMPER  ==================================================================
201e 0000 ; "DUMPER>"		;	DUMPER 		>  
200a 0000 ; "DUMP_INI>"		;	DUMP_INI 	>	; Endereço onde começa o dump
200c 0000 ; "DUMP_TAM>"		;	DUMP_TAM 	>	; Numero total de palavras a serem "dumpadas"
200e 0000 ; "DUMP_UL>"		;	DUMP_UL 	>	; Unidade logica do disco a ser usado
2010 0000 ; "DUMP_BL>"		;	DUMP_BL 	>	; Tamanho do bloco
2012 0000 ; "DUMP_EXE>"		;	DUMP_EXE 	>	; Endereço onde começaria a execução (valor dummy, apenas para manter o formato)


; Constantes usadas em DUMPER =========================================
8000 0002		;	INC_ADDRESS		K		/0002		; Constante de incremento de endereço
8002 1000		;	INVALID_ADDR	K		/1000       ; Constante de endereço invalido. Qualquer endereço igual ou maior que ele é inválido
8004 8000		;	LD_VAZIA    	LD 		/0000		; Load vazia para criação de intruções dinamicamente
8006 0001		;	INCREASE		K 		/0001		; Constante de decremento de contagem

8008 e300		;	PD_DISCO_VAZIA	PD 		/300 		; Put Data apenas com o tipo disco especificado 

; Variáveis de DUMPER ================================================================
800a 0000		;	DUMP_INI 		K 		/0000			; Endereço onde começa o dump
800c 0000		;	DUMP_TAM 		K 		/0000			; Numero total de palavras a serem "dumpadas"
800e 0000		;	DUMP_UL 		K 		/0000			; Unidade logica do disco a ser usado
8010 0000		;	DUMP_BL 		K 		/0000			; Tamanho do bloco
8012 0000		;	DUMP_EXE 		K 		/0000			; Endereço onde começaria a execução (valor dummy, apenas para manter o formato)
8014 0000		;	DUMP_END_ATUAL	K 		/0000			; Endereço atual que será "dumpado"
8016 0000		;	DUMP_CONTADOR	K 		/0000
8018 0000		;	DUMP_PD			K 		/0000
801a 0000		;	DUMP_CHECKSUM	K		/0000
801c 0000		;	DUMP_BL_ATUAL	K		/0000

801e 0000		;	DUMPER 			K 		/0000
a020 800a		;					LD 		DUMP_INI		; Pego o Endereço inicial e guardo como o endereço atual
a022 9014		;					MM 		DUMP_END_ATUAL
				
a024 800c		;					LD 		DUMP_TAM		; Pego o numero de palavras e guardo como contador atual
a026 9016		;					MM 		DUMP_CONTADOR

a028 800e		;					LD 		DUMP_UL			; Crio a instrução de PD com a Unidade Lógica atual
a02a 4008		;					+		PD_DISCO_VAZIA
				
a02c 9018		;					MM 		DUMP_PD         ; Salvo em todos os lugares em que ela é usada
a02e 9086		;					MM 		DUMP_PD_LOOP	


a030 9034		;					MM 		DUMP_SAVE_INI    ; DUMP da posição inicial	
a032 800a		;					LD 		DUMP_INI
8034 0000		;	DUMP_SAVE_INI	K 		/0000			
				
a036 8018		;					LD 		DUMP_PD				; DUMP do numero total de palavras	
a038 903c		;					MM 		DUMP_SAVE_TAM    
a03a 800c		;					LD 		DUMP_TAM
803c 0000		;	DUMP_SAVE_TAM	K 		/0000		

										

a03e 8016		;	DUMP_LOOP_DUMP  LD		DUMP_CONTADOR 	; Pego o CONTADOR atual e verifico se é igual a 0. Se é igual, então acabou e vai para o final da Subrotina		
a040 10a0		;					JZ 		DUMP_FIM		

8042 3000		;					LV		/0000			; Se não acabou, zero o CHECKSUM
a044 901a		;					MM 		DUMP_CHECKSUM

a046 8018		;					LD 		DUMP_PD			; Dou dump no endereço atual (endereço inicial do bloco)
a048 904c		;					MM 		DUMP_SAVE_ADDR    
a04a 8014		;					LD 		DUMP_END_ATUAL
804c 0000		;	DUMP_SAVE_ADDR	K 		/0000

a04e 8016		;					LD 		DUMP_CONTADOR		; Se contador < tamanho do bloco (DUMP_BL) o tamanho é o proprio contador. Se não, é o tamanho max DUMP_BL
a050 5010		;					- 		DUMP_BL
a052 2062		;					JN		DUMP_BMIN	
				
a054 8018		;					LD 		DUMP_PD			; Se estou aqui, contador > bloco e dumpo o tamanho do bloco max
a056 905a		;					MM 		DUMP_SAVE_BMAX    
a058 8010		;					LD 		DUMP_BL
805a 0000		;	DUMP_SAVE_BMAX	K 		/0000
a05c 8010		;					LD 	 	DUMP_BL
a05e 901c		;					MM 		DUMP_BL_ATUAL
a060 006e		;					JP		DUMP_BLK_LOOP	

a062 8018		;	DUMP_BMIN 		LD 		DUMP_PD			; Se estou aqui, contador < bloco e dumpo o tamanho do contador e o salvo como tamanho do bloco
a064 9068		;					MM 		DUMP_SAVE_BMIN    
a066 8016		;					LD 		DUMP_CONTADOR
8068 0000		;	DUMP_SAVE_BMIN	K 		/0000
a06a 8016		;					LD 		DUMP_CONTADOR
a06c 901c		;					MM 		DUMP_BL_ATUAL

a06e 801c		;	DUMP_BLK_LOOP	LD 		DUMP_BL_ATUAL 		; Se DUMP_BL_ATUAL for 0, já li todo o bloco, então salvo o checksum e volto para iniciar outro bloco		
a070 1074		;					JZ		DUMP_CSUM_LOAD
a072 007e		;					JP		DUMP_VALOR_DUMP		; Senão pulo para continuação
a074 8018		;	DUMP_CSUM_LOAD	LD 		DUMP_PD				; Se estou aqui,  dumpo o CHECKSUM
a076 907a		;					MM 		DUMP_SAVE_CSUM    
a078 801a		;					LD 		DUMP_CHECKSUM
807a 0000		;	DUMP_SAVE_CSUM	K 		/0000			
a07c 003e		;					JP		DUMP_LOOP_DUMP

a07e 8014		;	DUMP_VALOR_DUMP	LD		DUMP_END_ATUAL	; Pego no valor presente no endereço atual (com a ajuda de um load criado dinamicamente)
a080 4004		;					+		LD_VAZIA
a082 9084		;					MM 		DUMP_GET_VALOR
8084 0000		;	DUMP_GET_VALOR	K		/0000		
8086 0000		;	DUMP_PD_LOOP	K		/0000			; Salvo esse valor no disco com a instrução gerada no início

a088 401a		;					+		DUMP_CHECKSUM 	; Somo esse valor com CHECKSUM e salvo o novo CHECKSUM
a08a 901a		;					MM 		DUMP_CHECKSUM 	

a08c 8014		;					LD		DUMP_END_ATUAL  ; Incremento o endereço atual
a08e 4000		;					+		INC_ADDRESS
a090 9014		;					MM 		DUMP_END_ATUAL

a092 801c		;					LD 		DUMP_BL_ATUAL	; Decremento o tamanho do bloco 
a094 5006		;					-		INCREASE
a096 901c		;					MM      DUMP_BL_ATUAL

a098 8016		;					LD 		DUMP_CONTADOR	; Decremento o contador geral e volto ao início
a09a 5006		;					-		INCREASE 	
a09c 9016		;					MM 		DUMP_CONTADOR
				
a09e 006e		;					JP 		DUMP_BLK_LOOP

a0a0 8018		;	DUMP_FIM		LD 		DUMP_PD			; Antes do fim, dou dump no endereço da primeira instrução executável
a0a2 90a6		;					MM 		DUMP_SAVE_EXE    
a0a4 8012		;					LD 		DUMP_EXE
80a6 0000		;	DUMP_SAVE_EXE 	K 		/0000				
a0a8 b01e		;					RS 		DUMPER
